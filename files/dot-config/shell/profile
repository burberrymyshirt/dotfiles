###
### I edited lightdms wrapper script for $XDG_CONFIG_HOME/shell/profile to work.
### Would not reccomend the same, even though it works.
###
### Also XDG dirs have to be set before this is loaded, or nothing works. 
### /etc/security/pam_env.conf works fine for this on single user machines.
###

# Making cargo and rustup follow XDG Base Dir
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
export CARGO_HOME="$XDG_DATA_HOME"/cargo
#. "$CARGO_HOME/env"
# This shouldn't have to be here, but something somewhere is broken NOTE: It is the env script above
export PATH=$PATH:/home/larse/.local/share/cargo/bin

export EDITOR=nvim
export VISUAL=nvim
#export TERM=alacritty
export BROWSER=thorium-browser

# Sets xorg directories
export USERXSESSION="$XDG_CACHE_HOME/X11/xsession"
export USERXSESSIONRC="$XDG_CACHE_HOME/X11/xsessionrc"
export ALTUSERXSESSION="$XDG_CACHE_HOME/X11/Xsession"
export ERRFILE="$XDG_CACHE_HOME/X11/xsession-errors"
#export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority # This line breaks lightdm, so use with care
# Fixing more XDG Base dir stuff
export NVM_DIR="$XDG_DATA_HOME"/nvm
export ICEAUTHORITY="$XDG_CACHE_HOME"/ICEauthority
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc
export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc
export HISTFILE="$XDG_STATE_HOME"/bash/history
### TODO: Fix this Java line at some point, because programs were complaining ###
# export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
export STACK_ROOT="$XDG_DATA_HOME"/stack
export GHCUP_USE_XDG_DIRS=true
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"
export DVDCSS_CACHE="$XDG_DATA_HOME"/dvdcss
export NUGET_PACKAGES="$XDG_CACHE_HOME"/NuGetPackages
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export PYTHON_HISTORY=$XDG_STATE_HOME/python/history
export PYTHONPYCACHEPREFIX=$XDG_CACHE_HOME/python
export PYTHONUSERBASE=$XDG_DATA_HOME/python
# Some misc stuff as this file is beyond messy
export QT_QPA_PLATFORMTHEME="gtk2"        # Have QT use gtk2 theme.
export MOZ_USE_XINPUT2=1                  # Mozilla smooth scrolling/touchpads.
export AWT_TOOLKIT="MToolkit wmname LG3D" # May have to install wmname
export _JAVA_AWT_WM_NONREPARENTING=1      # Fix for Java applications in dwm
export GOPATH="$XDG_DATA_HOME"/go
export GOMODCACHE="$XDG_CACHE_HOME"/go/mod
export GOTMPDIR="$XDG_CACHE_HOME"/go/tmp
export ANSIBLE_HOME="${XDG_CONFIG_HOME}/ansible"
export ANSIBLE_CONFIG="${XDG_CONFIG_HOME}/ansible.cfg"
export ANSIBLE_GALAXY_CACHE_DIR="${XDG_CACHE_HOME}/ansible/galaxy_cache"
export DVDCSS_CACHE="$XDG_DATA_HOME"/dvdcss 
export BASH_COMPLETION_USER_FILE="$XDG_CONFIG_HOME"/bash-completion/bash_completion
export DISCORD_USER_DATA_DIR="${XDG_DATA_HOME}"
export MIX_XDG="true"
export FFMPEG_DATADIR="$XDG_CONFIG_HOME"/ffmpeg
export TERMINFO="$XDG_DATA_HOME"/terminfo
export TERMINFO_DIRS="$XDG_DATA_HOME"/terminfo:/usr/share/terminfo
export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
export NUGET_PACKAGES="$XDG_CACHE_HOME"/NuGetPackages
export RIPGREP_CONFIG_PATH=$XDG_CONFIG_HOME/ripgrep/config
export RUFF_CACHE_DIR=$XDG_CACHE_HOME/ruff
export STARSHIP_CONFIG="$XDG_CONFIG_HOME"/starship.toml
export STARSHIP_CACHE="$XDG_CACHE_HOME"/starship 
export VAGRANT_HOME="$XDG_DATA_HOME"/vagrant
export VAGRANT_ALIAS_FILE="$XDG_DATA_HOME"/vagrant/aliases
# export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME"/aws/credentials
# export AWS_CONFIG_FILE="$XDG_CONFIG_HOME"/aws/config
export XCURSOR_PATH=${XCURSOR_PATH}:~/.local/share/icons
export W3M_DIR="$XDG_STATE_HOME/w3m"
export PYTHON_HISTORY=$XDG_STATE_HOME/python/history
export PYTHONPYCACHEPREFIX=$XDG_CACHE_HOME/python
export PYTHONUSERBASE=$XDG_DATA_HOME/python
export PATH=$PATH:/home/larse/.local/share/go/bin/
export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel
export ASDF_CONFIG_FILE="${XDG_CONFIG_HOME}/asdf/asdfrc"
export ASDF_DATA_DIR="${XDG_DATA_HOME}/asdf"
export ASDF_DIR="${XDG_CONFIG_HOME}/asdf"
# Add all directories in `~/.local/bin` to $PATH
# export PATH="$PATH:$(find -L ~/.local/bin -type d | paste -sd ':' -)"
export PATH="$PATH:$(find -L $HOME/.local/bin -type d | paste -sd ':' -)"

export CR_WORK_DIR="$HOME/work"
# Makes asdf version manager work
#. /opt/asdf-vm/asdf.sh

xrdb -merge "${HOME}/.Xresources"

export MANWIDTH=80
